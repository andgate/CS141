{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq0\fcharset128 Monospaced.plain;}{\f6\fnil\fprq2\fcharset0 DejaVu Sans;}{\f7\fnil\fprq2\fcharset0 Lohit Hindi;}{\f8\fnil\fprq0\fcharset128 Lohit Hindi;}}
{\colortbl;\red0\green0\blue0;\red148\green30\blue223;\red0\green203\blue0;\red250\green100\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\*\cs15\snext15 Numbering Symbols;}
{\s16\sbasedon0\snext17\sb240\sa120\keepn\dbch\af6\dbch\af7\afs28\loch\f4\fs28 Heading;}
{\s17\sbasedon0\snext17\sl288\slmult1\sb0\sa140 Text Body;}
{\s18\sbasedon17\snext18\sl288\slmult1\sb0\sa140\dbch\af8 List;}
{\s19\sbasedon0\snext19\sb120\sa120\noline\i\dbch\af8\afs24\ai\fs24 Caption;}
{\s20\sbasedon0\snext20\noline\dbch\af8 Index;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-283\li707}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-283\li1414}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-283\li2121}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-283\li2828}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-283\li3535}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-283\li4242}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-283\li4949}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-283\li5656}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-283\li6363}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid2}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}{\info{\creatim\yr2014\mo10\dy24\hr19\min17}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern67241475}}\deftab720
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
Gabriel Anderson}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
CS&141}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
Chapter 5, Before Day 2}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s17\sl288\slmult1\sb0\sa140\rtlch \ltrch\loch

\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  1.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.205 special topic 5.3 block scope}
\par \pard\plain \s17\sl288\slmult1\sb0\sa140\li707\ri0\lin707\rin0\fi0\sb0\sa0{\rtlch \ltrch\loch
A block is a sequence of statements enclosed in curly braces. A block introduces a scope. Variables declared in that scope can only be accessed from inside that scope. Outside of a scope, those variables don't exist. Separate scopes can have variables with the same name without issue. It's good design to minimize the scope of a variable. If the scope has the declaration for a variable with the same name as a local variable outside of the scope, the compiler will throw an error.\line }
\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  2.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.206 special topic enumeration\line }{\rtlch \ltrch\loch
Enumeration is a wonderful way to create types with specific values. For instance, you can have a Color enum with the values RED, GREEN, and BLUE.\line \tab \tab public enum Color \{ RED, GREEN, BLUE \}\line Then the enum can be used as a variable's type, and the variable can do stuff with the enum.\line \tab \tab Color carColor = someCar.getColor();\line \tab \tab if(carColor == Color.RED) \{ doStuff(); \}\line The declaration of an enum must be placed inside of a class.\line }
\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  3.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.209 full code example shipping \line }{\b\ab\rtlch \ltrch\loch
Shipping.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Shipping}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 SHIPPING_COST_OUTSIDE_US = 10.0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 SHIPPING_COST_US_OUTSIDE_CONTIENTAL_US = 10.0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 SHIPPING_COST_CONTIENTAL_US = 5.0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner console = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Inside US? [Y/N]: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isInsideUS = yesOrNo(console.next());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 shippingCost;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isInsideUS)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Continental US? [Y/N]: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isContinentalUS = yesOrNo(console.next());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isContinentalUS)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            shippingCost = SHIPPING_COST_CONTIENTAL_US;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            shippingCost = SHIPPING_COST_US_OUTSIDE_CONTIENTAL_US;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         shippingCost = SHIPPING_COST_OUTSIDE_US;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Shipping cost is "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + shippingCost);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf4\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf4\afs20\rtlch \ltrch\loch\fs20\loch\f5
      @return True if yes, false if no.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf4\afs20\rtlch \ltrch\loch\fs20\loch\f5
    */}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 yesOrNo(String answer)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String firstLetter = answer.trim().toUpperCase().substring(0, 1);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(firstLetter.equals(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Y"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s17\sl288\slmult1\sb0\sa140\li707\ri0\lin707\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  4.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.212 special topic 5.5 logging\line }{\rtlch \ltrch\loch
Trace messages are messages printed to the command line that report the status of the program, a useful method for debugging. Using }{\i\ai\rtlch \ltrch\loch
System.out.println}{\rtlch \ltrch\loch
 to trace is a bad idea because when it comes time to release the program, all the trace messages have to be removed. A more effective utility for creating trace messages is the Logger class. A logger can be obtained by using\line \tab \tab Logger.getGlobal();\line to get the global logger for the program. Then call the logger's info method to output trace messages.\line \tab \tab Logger.getGlobal().info(\uc2 \u8220\'81\'67Very import information to make life easier\u8221\'81\'68);\line Finally, the logger is on by default. To turn off the logger's output, simply put this call at the beginning of the main method.\line \tab \tab Logger.getGlobal().setLevel(Level.OFF);\uc1 }{\rtlch \ltrch\loch
\line }
\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  5.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.214 full code example boolean\line }{\b\ab\rtlch \ltrch\loch
IsLiquid.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 IsLiquid}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 FREEZING_POINT_OF_WATER = 0.0; }{\cf4\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Celcius}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 BOILING_POINT_OF_WATER = 100.0; }{\cf4\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Celcius}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner console = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"What is the current temperature, in celsius? "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 temperature;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(console.hasNextDouble())}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         temperature = console.nextDouble();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Invalid input"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 waterIsLiquid = FREEZING_POINT_OF_WATER < temperature}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
                              && temperature < BOILING_POINT_OF_WATER;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(waterIsLiquid)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Water is liquid."}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Water is not liquid."}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s17\sl288\slmult1\sb0\sa140\li707\ri0\lin707\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  6.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa0{\rtlch \ltrch\loch
p.217 special topic 5.6 short circuit evaluation\line }{\rtlch \ltrch\loch
The && and || operators use short-circuit evaluation from left to right. So for &&, if the left conjunct is false, the operator returns false and doesn't evaluate the right conjunct. Likewise, for ||, if the left }{{\*\bkmkstart __DdeLink__1031_648262972}\rtlch \ltrch\loch
disjunct}{{\*\bkmkend __DdeLink__1031_648262972}\rtlch \ltrch\loch
 is true, the operator evaluates to true and doesn't evaluate the right disjunct. The important take away from this is, keep code that MUST execute out of logical tests!}
\par \pard\plain \s17\sl288\slmult1\sb0\sa140\pagebb\li707\ri0\lin707\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s17\sl288\slmult1\sb0\sa140{\listtext\pard\plain  7.\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-283\tx707\li707\ri0\lin707\rin0\fi-283\sb0\sa140{\rtlch \ltrch\loch
special topic 5.7 De Morgan's Law\line }{\rtlch \ltrch\loch
De Morgan's Law is basically...\line \tab \tab !(A && B) is equivalent to !A || !B\line \tab \tab !(A || B) is equivalent to !A && ! B\line So, basically upper level negations can and should be moved to the innermost level. This law can be applied to simplify boolean expressions for the sake of other programmers. Just don't forget to change the operators!}
\par }