{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq0\fcharset128 Monospaced.plain;}{\f6\fnil\fprq2\fcharset0 DejaVu Sans;}{\f7\fnil\fprq2\fcharset0 Lohit Hindi;}{\f8\fnil\fprq0\fcharset128 Lohit Hindi;}}
{\colortbl;\red0\green0\blue0;\red148\green30\blue223;\red0\green203\blue0;\red120\green120\blue120;\red250\green100\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\dbch\af6\dbch\af7\afs28\loch\f4\fs28 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\sb0\sa140 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\sb0\sa140\dbch\af8 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af8\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af8 Index;}
}{\info{\creatim\yr2014\mo11\dy16\hr11\min54}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern67241730}}\deftab720
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
Gabriel Anderson}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
CS&141, S1}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
Chapter 7, Day 2}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
1. }{\rtlch \ltrch\loch
p. 362 R7.4 random and different random values\line }{\b\ab\rtlch \ltrch\loch
RandomFilled.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Random;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 RandomFilled}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[10];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Random generator = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Random();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 index = 0; index < values.length; index++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         values[index] = generator.nextInt(100) + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 value : values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(value + }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
RandomFilledDifferent.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Random;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 RandomFilledDifferent}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[10];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Random generator = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Random();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 index = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (index < values.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 hasMatch = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         values[index] = generator.nextInt(100) + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 j = 0; j > index; j++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(values[index] == values[j])}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               hasMatch = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(!hasMatch)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            index++;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 value : values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(value + }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
2. }{\rtlch \ltrch\loch
p. 334-336 How to 7.1 Student scores\line }{\b\ab\rtlch \ltrch\loch
Read the inputs\line Find the min}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
Calcluate the sum \u8211\'3f min\line Calculate the average of n \u8211\'3f 1 testscores}{\rtlch \ltrch\loch
\line \line }{\b\ab\rtlch \ltrch\loch
TestScores.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 TestScores}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner in = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Get input}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] scores = askScores(in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Find minimum}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 min = getMin(scores);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Sum values}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum = getSum(scores);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Get the average of (n - 1) values}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 averageScore = sum / (scores.length - 1);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Average Score: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + averageScore);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] askScores(Scanner in)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] scores = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[10];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < scores.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         scores[i] = in.nextInt();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 scores;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 getMin(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 min = values[0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 1; i < values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(values[i] < min)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            min = values[i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 min;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 getSum(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         sum += values[i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
3. }{\rtlch \ltrch\loch
p. 367 E7.3 smallest and largest\line }{\b\ab\rtlch \ltrch\loch
ExtremesInArray.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   This program reads a sequence of values and prints them, marking the extreme values.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
*/}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ExtremesInArray}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  \{  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 LENGTH = 100;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[LENGTH];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 currentSize = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Read inputs}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Please enter values, Q to quit:"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner in = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (in.hasNextDouble() && currentSize < values.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         values[currentSize] = in.nextDouble();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         currentSize++;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Find the exteme values, largest and smallest}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 largest = values[0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 smallest = values[0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 1; i < currentSize; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         largest = Math.max(values[i], largest);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         smallest = Math.min(values[i], smallest);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Print all values, marking the extremes}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < currentSize; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(values[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (values[i] == largest) }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" <== largest value"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (values[i] == smallest) }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" <== smallest value"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
4. }{\rtlch \ltrch\loch
p. 367 E7.4 sum without smallest (you must not use an ArrayList)\line }{\b\ab\rtlch \ltrch\loch
SumWithoutSmallest.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 SumWithoutSmallest}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[10];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner in = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         values[i] = in.nextInt();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum = sumWithoutSmallest(values);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Sum without smallest: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + sum);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sumWithoutSmallest(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 min = values[0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum = values[0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 1; i < values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         min = Math.min(min, values[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         sum += values[i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      sum -= min;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sum;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
5. }{\rtlch \ltrch\loch
E7.19 scaled histogram with captions}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
VisualizeData.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.ArrayList;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 VisualizeData}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 MAX_BAR_SIZE = 40;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String ASTERISK = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"*"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String NAME_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter name: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String VALUE_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter value: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main (String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      ArrayList<String> labels = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ArrayList<>();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      ArrayList<Double> values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ArrayList<>();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner in = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      askInput(in, labels, values);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String[] bars = generateBars(values);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 elements = labels.size();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < elements; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.printf(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"%15s "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
, labels.get(i));}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(bars[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 askInput(}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner in,}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      ArrayList<String> labels,}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      ArrayList<Double> values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 valid = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
do}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String name = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
""}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 value = 0.0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
try}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter name: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            name = in.next();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter value: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            value = in.nextDouble();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(java.util.InputMismatchException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            valid = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(java.lang.IllegalStateException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            valid = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(java.util.NoSuchElementException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            valid = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
        }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(valid)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            labels.add(name);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            values.add(value);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \} }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (valid);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String[] generateBars(ArrayList<Double> values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 largest = getLargest(values);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 scaleFactor = (}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
) MAX_BAR_SIZE / largest;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String[] bars = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String[values.size()];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < bars.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 barSize = (}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
) (values.get(i) * scaleFactor);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         bars[i] = stringFill(ASTERISK, barSize);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 bars;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 getLargest(ArrayList<Double> values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 largest = values.get(0);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 value : values)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         largest = Math.max(largest, value);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 largest;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String stringFill(String str, }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 amount)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String filledStr = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
""}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < amount; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         filledStr += str;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 filledStr;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
6. }{\rtlch \ltrch\loch
E7.20 append + E7.21 merge\line }{\b\ab\rtlch \ltrch\loch
Sequence.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.ArrayList;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ArrayList<Integer> values;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      values = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ArrayList<Integer>();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 add(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 n)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      values.add(n);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 get(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 values.get(i);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 size()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 values.size();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence append(Sequence other)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Sequence newValues = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
this}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
.size(); i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         newValues.add(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
this}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
.get(i));}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < other.size(); i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         newValues.add(other.get(i));}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 newValues;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence merge(Sequence other)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Sequence newValues = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 longest = Math.max(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
this}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
.size(), other.size());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < longest; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(i < }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
this}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
.size())}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            newValues.add(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
this}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
.get(i));}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
        }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(i < other.size())}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            newValues.add(other.get(i));}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 newValues;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   @Override}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String toString()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 values.toString();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
SequenceTester.java}{\rtlch \ltrch\loch
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 SequenceTester}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] a_values}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = \{ 1, 4, 9, 16 \};}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] b_values}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = \{ 9, 7, 4, 9, 11 \};}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String INITIAL_A_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Initial Sequence A: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String INITIAL_B_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Initial Sequence B: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String FINAL_A_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Final Sequence A: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String FINAL_B_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Final Sequence B: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String APPEND_EXPECTED_C_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Expected Squence C: [1, 4, 9, 16, 9, 7, 4, 9, 11]"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String MERGE_EXPECTED_C_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Expected Squence C: [1, 9, 4, 7, 9, 4, 16, 9, 11]"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String ACTUAL_C_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Actual Squence C: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String APPEND_TEST_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Append Test"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String MERGE_TEST_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Merge Test"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Sequence a = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < a_values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         a.add(a_values[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Sequence b = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Sequence();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < b_values.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         b.add(b_values[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(INITIAL_A_ECHO + a.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(INITIAL_B_ECHO + b.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(APPEND_TEST_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Sequence c = a.append(b);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(FINAL_A_ECHO + a.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(FINAL_B_ECHO + b.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(APPEND_EXPECTED_C_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(ACTUAL_C_ECHO + c.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      c = a.merge(b);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(MERGE_TEST_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(FINAL_A_ECHO + a.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(FINAL_B_ECHO + b.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(MERGE_EXPECTED_C_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(ACTUAL_C_ECHO + c.toString());}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\afs20\rtlch \ltrch\loch\fs20

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
7. }{\rtlch \ltrch\loch
(optional) Enhance your code from P7.1 to mark the first run with square brackets [ ] instead of ( )}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
DieSimulator.java}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   This program simulates casting a die twenty times.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   Also, encases that runs in parenthesis.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
*/}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 DieSimulator}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[] casts = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
[20];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Die d = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Die(6);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < casts.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         casts[i] = d.cast();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      printCasts();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 printCasts()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isFirst = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < casts.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 distance = i + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Thanks to the magic of}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// short-circuit logic,}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// this won't cause an}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// ArrayIndexOutOfBoundsException!}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
( (distance != casts.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
          && (casts[i] == casts[i+1]) )}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
        \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isFirst)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"["}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + casts[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"("}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + casts[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
do}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               i++;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               distance = i + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 + casts[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
( (distance < casts.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
                && (casts[i] == casts[i+1]) );}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isFirst)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               isFirst = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"]"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
")"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(casts[i]);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(distance != casts.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(}{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}{\rtlch \ltrch\loch
\line }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
Die.java}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Random;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   This class models a die that, when cast, lands on a random}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   face.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
*/}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Die}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Random generator;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sides;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Constructs a die with a given number of sides.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
      @param s the number of sides, e.g. 6 for a normal die}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   */}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Die(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 s)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      sides = s;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      generator = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Random();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
/**}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Simulates a throw of the die}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
      @return the face of the die }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
   */}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 cast()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 1 + generator.nextInt(sides);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
8. }{\rtlch \ltrch\loch
(optional) p. 372 P7.6 tic-tac-toe make the computer the 2nd player using random valid choices}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\b\ab\rtlch \ltrch\loch
TicTacToe.java}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\dbch\af6\langfe2052\dbch\af7\afs24\alang1081\loch\f3\fs24\lang1033{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Scanner;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.Random;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.InputMismatchException;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
import}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 java.util.NoSuchElementException;}{\afs20\rtlch \ltrch\loch\fs20
\line \line }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
class}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 TicTacToe}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String[][] board = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String[3][3];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 turn;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 PLAYER_1_TURN = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 PLAYER_2_TURN = 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String PLAYER_1_MARK = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"O"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String PLAYER_2_MARK = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"X"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String UNMARKED = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String COLUMN_HEADER}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"  1   2   3  "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String CEILING}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" _1_ _2_ _3_ "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String EMPTY_ROW}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"|   |   |   |"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String FLOOR}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"|___|___|___|"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String LEFT_WALL}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"|"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String SPACE = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String RIGHT_WALL}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" |"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String CURRENT_TURN_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Current turn: Player "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String ENTER_ROW_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter Row (1-3): "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String ENTER_COLUMN_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Enter Column (1-3) : "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String ALREADY_MARKED_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"That location is already marked."}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String COMPUTER_CHOSE_ROW_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Computer marked row: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String COMPUTER_CHOSE_COLUMN_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Computer marked column: "}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String GAME_TIED_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"The game has ended in a tie!"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String PLAYER_PREFIX}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Player #"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String HAS_WON_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
" has won the game!"}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String GOOD_BYE_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"\\nGoodbye."}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
final}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String INVALID_INPUT_ECHO}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      = }{\cf3\afs20\rtlch \ltrch\loch\fs20\loch\f5
"Invalid input. Please enter 1, 2, or 3."}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 main(String[] args)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      initializeBoard();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// player 1 goes first}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      turn = PLAYER_1_TURN;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Scanner console = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(System.in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      gameLoop(console);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 initializeBoard()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < board.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 j = 0; j < board.length; j++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            board[i][j] = UNMARKED;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 gameLoop(Scanner in)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isGameOver = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(!isGameOver)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         drawBoard();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// Do the next turn}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         turn(in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isThreeInARow())}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            win();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            isGameOver = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isBoardFull())}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            tie();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            isGameOver = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            nextTurn();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 tie()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      drawBoard();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(GAME_TIED_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 win()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      drawBoard();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 winner = turn + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(PLAYER_PREFIX + winner + HAS_WON_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 drawBoard()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(CEILING);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < board.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(EMPTY_ROW);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(i + 1);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 j = 0; j < board[i].length; j++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.print(SPACE + board[i][j] + RIGHT_WALL);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(FLOOR);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 turn(Scanner in)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      sayTurn();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(turn == PLAYER_1_TURN)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         humanTurn(in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 (turn == PLAYER_2_TURN)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         computerTurn();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 humanTurn(Scanner in)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isTurnOver = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(!isTurnOver)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(ENTER_ROW_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 row = ask(in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.print(ENTER_COLUMN_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 column = ask(in);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String mark = getCurrentMark();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(isMarked(row, column))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            System.out.println(ALREADY_MARKED_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            isTurnOver = markBoard(mark, row, column);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 computerTurn()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      Random gen = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 Random();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 row = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 column = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 valid = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(!valid)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         row = gen.nextInt(3);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         column = gen.nextInt(3);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         valid = !isMarked(row, column);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String mark = getCurrentMark();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      markBoard(mark, row, column);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(COMPUTER_CHOSE_ROW_ECHO + row);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(COMPUTER_CHOSE_COLUMN_ECHO + column);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 sayTurn()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 playerNum = turn + 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(CURRENT_TURN_ECHO + playerNum);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 ask(Scanner in)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
while}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 pos = 0;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
try}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            pos = in.nextInt();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(InputMismatchException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// let the loop take care of it}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(NoSuchElementException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            forceQuit();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
catch}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(IllegalStateException e)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            forceQuit();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         pos -= 1;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(0 <= pos && pos < board.length)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 pos;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// No valid input was found,}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf5\afs20\rtlch \ltrch\loch\fs20\loch\f5
// so let the loop repeat.}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         System.out.println(INVALID_INPUT_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 nextTurn()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(turn == PLAYER_1_TURN)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         turn = PLAYER_2_TURN;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
else}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         turn = PLAYER_1_TURN;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 String getCurrentMark()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(turn == PLAYER_1_TURN)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 PLAYER_1_MARK;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 PLAYER_2_MARK;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 markBoard(String mark, }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 row, }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 column)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(row >= board.length || row < 0)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(column >= board[row].length || column < 0)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      board[row][column] = mark;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isMarked(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 row, }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 column)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 !board[row][column].equals(UNMARKED);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isBoardFull()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < board.length; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 j = 0; j < board[i].length; j++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(!isMarked(i, j))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 isThreeInARow()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
  \{  }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 checkDownwardDiagonal()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               || checkUpwardDiagonal()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               || checkRows()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               || checkColumns();}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 checkDownwardDiagonal()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String first = board[0][0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String second = board[1][1];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String third = board[2][2];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(PLAYER_1_MARK) || first.equals(PLAYER_2_MARK))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 first.equals(second) && second.equals(third);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 checkUpwardDiagonal()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String first = board[0][2];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      String second = board[1][1];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     String third = board[2][0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(PLAYER_1_MARK) || first.equals(PLAYER_2_MARK))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 first.equals(second) && second.equals(third);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 checkRows()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 found = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < board.length && !found; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String first = board[i][0];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String second = board[i][1];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String third = board[i][2];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(PLAYER_1_MARK) || first.equals(PLAYER_2_MARK))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(second) && second.equals(third))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               found = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 found;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 checkColumns()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
     }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
boolean}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 found = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
false}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
for}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(}{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
int}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 i = 0; i < board.length && !found; i++)}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String first = board[0][i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String second = board[1][i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         String third = board[2][i];}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(PLAYER_1_MARK) || first.equals(PLAYER_2_MARK))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
(first.equals(second) && second.equals(third))}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
               found = }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
true}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
            \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
         \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 found;}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
private}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
static}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\afs20\rtlch \ltrch\loch\fs20\loch\f5
void}{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
 forceQuit()}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.out.println(GOOD_BYE_ECHO);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
      System.exit(0);}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
   \}}{\afs20\rtlch \ltrch\loch\fs20
\line }{\cf1\afs20\rtlch \ltrch\loch\fs20\loch\f5
\}}
\par }