{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Monospaced.plain;}{\f6\fnil\fprq2\fcharset0 Lohit Hindi;}{\f7\fnil\fprq0\fcharset128 Lohit Hindi;}{\f8\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red148\green30\blue223;\red0\green203\blue0;\red250\green100\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\ql\nowidctlpar\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af6\afs28\loch\f4\fs28\lang1033 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\ql\nowidctlpar\sb0\sa140\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\loch\f3\fs24\lang1033 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\ql\nowidctlpar\sb0\sa140\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af7\afs24\loch\f3\fs24\lang1033 List;}
{\s18\sbasedon0\snext18\ql\nowidctlpar\sb120\sa120\noline\ltrpar\cf1\i\kerning1\dbch\af6\langfe1081\dbch\af7\afs24\ai\loch\f3\fs24\lang1033 Caption;}
{\s19\sbasedon0\snext19\ql\nowidctlpar\noline\ltrpar\cf1\kerning1\dbch\af6\langfe1081\dbch\af7\afs24\loch\f3\fs24\lang1033 Index;}
}{\info{\creatim\yr2014\mo11\dy18\hr20\min1}{\revtim\yr2014\mo11\dy18\hr22\min47}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern67306497}}\deftab720
\viewscale110
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Gabriel Anderson}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
CS&141, S1}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Chapter 11, Before Day 1}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Self-Check Exercises}{\rtlch \ltrch\loch
\line \line }{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
1.}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 The input file is overwritten when the PrintWriter is constructed, so there is no data, and it just writes \u8220\'93Total:     0.00\u8221\'94 to the output file.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
2.}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 Throws a FileNotFoundException and ends program execution.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
3.}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Read the data into a string, dataString, using a scanner with a \u8220\'93\\\\Z\u8221\'94 delimiter.}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Continue with creating the in and out objects.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Before writing data to the file, print the dataString to out.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Continue on to printing values and the total.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
4. }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Add a counter to count the number of items added to the total. Instead of printing the total, compute the average by dividing the total by the counter. Then print the average.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
5. }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Replace the read/write loop and final result output with this...}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033
        }{\cf2\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
while}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
 (in.hasNextDouble())}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
      \{}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         }{\cf2\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
double}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
 value = in.nextDouble();}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         out.printf(}{\cf3\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
"%8.2f"}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
, value);}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         }{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         total = total + value;}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         }{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         }{\cf2\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
if}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
(in.hasNextDouble())}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         \{}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
            value = in.nextDouble();}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
            out.printf(}{\cf3\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
"%8.2f\\n"}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
, value);}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
            total = total + value;}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         \}}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         }{\cf2\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
else}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         \{}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
            out.println();}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
         \}}{\rtlch \ltrch\loch
\line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
      \}}{\rtlch \ltrch\loch
\line \line }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
      out.printf(}{\cf3\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
"Total: %10.2f\\n"}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
, total);}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
6.}{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 The values will be \u8220\'93Hello\u8221\'94 for word, and \u8220\'93World!\u8221\'94 for input. This is because the default delimiter uses white space, so symbols like \u8220\'93!\u8221\'94 are included with words.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
7. }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
The values will be 0 for number, and \u8220\'93995.0\u8221\'94 for input. \u8220\'93995.0\u8221\'94 is a double, not an int. So number never gets assigned to the value 995. Then, input is given the string in the the scanner's buffer, which is \u8220\'93995.0\u8221\'94.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
8. }{\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
The scanner object is smart, and can handle values in scientific notation, and values with commas. The values will be 6000000.0 for x1, and 6995.0 for x2.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
9. }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Assuming the scanner object is \u8220\'93in\u8221\'94, the following can be done...}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf2\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
if}{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
(in.hasNextDouble())}{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
\{}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\fs20\lang1033\loch\f5
   }{\cf4\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
// read data}{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
\}}{\rtlch \ltrch\loch
\line }{\cf2\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
else}{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
\{}{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
   in.next();}{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs20\lang1033\loch\f5
\}}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\rtlch \ltrch\loch
\line }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
Basically, just check if the data is a double, and if not, skip go to the next one.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
10. }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
To remove the space at the end, you could just take of a substring of the input from 0 to \u8220\'93name.length \u8211\'96 1\u8221\'94.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
11. }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
The value of args would be [\u8220\'93-d\u8221\'94, \u8220\'93file1.txt\u8221\'94].}{\rtlch \ltrch\loch
\line \line }{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
12.}{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 CaesarCipher.java counts the number of files, and if the program arguments don't give two files, then the program will print out the usage information and the main method then returns. Which is what happens when the program is given \u8220\'93-d file1.txt\u8221\'94.}{\rtlch \ltrch\loch
\line \line }{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
13.}{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 Given the program argument \u8220\'93file1.txt file2.txt -d\u8221\'94, the program will assign the first file as the input file, and then assign the second file as the output file. Then it sees the -d switch, and switches from encryption mode to decryption mode. Then, it goes about writing the }{{\*\bkmkstart __DdeLink__159_1074268471}\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
decrypted}{{\*\bkmkend __DdeLink__159_1074268471}\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 data to file2.txt.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
14.}{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 CAESAR \u8594\'3f ZXBPXO}{\rtlch \ltrch\loch
\line \line }{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
15.}{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
 In the for loop for parsing arguments, where the options are being checks, add a check for the \u8220\'93k\u8221\'94 option. Then take the string arg.substring(2, arg.length) and pass it to Integer.parseInt, which should store the value in the key variable.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
16. }{\cf1\b0\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
The value of balance would still be 100, because the IllegalArgumentException would be thrown, and the program's execution would be terminated if the exception was uncaught.}{\rtlch \ltrch\loch
\line \line }{\cf1\b\kerning1\dbch\af6\langfe1081\rtlch \ltrch\loch\fs24\lang1033
17.}{\rtlch \ltrch\loch
\line }{\cf2\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
if}{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
(balance - amount < 0)}{\b0\afs20\ab0\rtlch \ltrch\loch\fs20
\line }{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
\{}{\b0\afs20\ab0\rtlch \ltrch\loch\fs20
\line }{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
throw}{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
 OverDraftException();}{\b0\afs20\ab0\rtlch \ltrch\loch\fs20
\line }{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
\}}{\b0\afs20\ab0\rtlch \ltrch\loch\fs20
\line \line }{\cf1\b0\afs20\ab0\rtlch \ltrch\loch\fs20\loch\f5
balance -= amount;}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
18. }{\rtlch \ltrch\loch
The scanner had no trouble opening the file, but when the file is read with nextInt(), a NoSuchElementException is throw, and the program is terminated.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
19. }{\rtlch \ltrch\loch
ArrayIndexOutOfBoundsException is unchecked, because it means there is an error in the programmers code that should be corrected. Checked exceptions are only used for errors that the programmer has no control over.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
20. }{\rtlch \ltrch\loch
Checked exceptions must be caught. Unchecked exceptions do not have to be caught.\line \line }{\b\ab\rtlch \ltrch\loch
21. }{\rtlch \ltrch\loch
The PrintWriter constructor can throw a FileNotFoundException which is not caught. The method should be modified to either propagate the exception or handle it.\line \line }{\b\ab\rtlch \ltrch\loch
22. }{\b0\ab0\rtlch \ltrch\loch
super(message) ensure the exception is constructed with the proper message.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
23. }{\b0\ab0\rtlch \ltrch\loch
BadDataException should extend IOException.\line \line }{\b\ab\rtlch \ltrch\loch
24. }{\b0\ab0\rtlch \ltrch\loch
DataSetReader.readFile does not catch any exceptions. Instead, it propagates the exception to the method calling it.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\b\ab\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
25.}{\b0\ab0\rtlch \ltrch\loch
 If a blank file is given to DataAnalyzer, when the  DataSetReader.readData reads the file, since the scanner does not have an int to give it, readData will throw a BadDataException. The main method catches this exception, and prints out the exception's message. Since the mainloop won't finish until done is true, and done is still false, the program will loop again, asking for another file.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\b\ab\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
26. }{\b0\ab0\rtlch \ltrch\loch
No much needs to be changed. Just all the mentions of BadDataException would need to be changed to NoSuchElementException all throughout the program's source.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\b\ab\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
27.}{\b0\ab0\rtlch \ltrch\loch
 The in Scanner object was declared outside of the try/finally block so that the in object would be in both the scope of the try block and the scope of the finally block. Had it been declared inside the try block, the finally block could not guarantee the file would be closed, as it would not be able to access the object.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\b\ab\rtlch \ltrch\loch

\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\b\ab\rtlch \ltrch\loch
28.}{\b0\ab0\rtlch \ltrch\loch
 DataSetReader.readfile would be two line shorter.}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar{\cf1\b\afs20\ab\rtlch \ltrch\fs20\loch\f5
   }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
public}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
 }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
double}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
[] readFile(String filename) }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
throws}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
 IOException}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
   \{}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
try}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
(Scanner in = }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
 Scanner(}{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
new}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
 File(filename)))}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
         readData(in);}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
        }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
return}{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
 data;}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      }{\cf2\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
finally}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      \{}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
         in.close();}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
      \}}{\b\afs20\ab\rtlch \ltrch\loch\fs20
\line }{\cf1\b\afs20\ab\rtlch \ltrch\loch\fs20\loch\f5
   \}}
\par \pard\plain \s0\ql\nowidctlpar\ltrpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf1\kerning1\dbch\af6\langfe1081\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\b\afs20\ab\rtlch \ltrch\loch\fs20

\par }